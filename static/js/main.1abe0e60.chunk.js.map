{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","onCancel","onAddExpense","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","id","Math","random","toString","title","amount","date","Date","className","htmlFor","type","value","onChange","target","min","step","max","onClick","NewExpense","isEditing","setIsEditing","changeEditinStatus","prev","style","margin","Card","props","classes","children","ExpensesFilter","onChangeFilter","filteredYear","ExpenseDate","str","month","toLocaleString","toUpperCase","slice","day","year","getFullYear","ExpenseItem","ExpensesList","items","filterValue","length","map","expense","ChartBar","maxValue","label","barFillHeight","round","height","Chart","dataPoints","totalMaximum","dataPoint","reduce","sum","current","ExpensesChart","expenses","chartDataPoints","getMonth","Expenses","setFilteredYear","filteredItems","filter","DUMMY_EXPENSES","App","setExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1abe0e60.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = ({ onCancel, onAddExpense }) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n  const clearInputValue = () => {\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    onAddExpense({\n      id: Math.random().toString(),\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    });\n    clearInputValue();\n    onCancel();\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"title\">Название</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"amount\">Цена</label>\n          <input\n            id=\"amount\"\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"date\">Дата</label>\n          <input\n            id=\"date\"\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={onCancel}>\n          Отмена\n        </button>\n        <button type=\"submit\">Добавить расход</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = ({onAddExpense}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const changeEditinStatus = () => {\n    setIsEditing((prev) => !prev);\n  }\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button\n          onClick={changeEditinStatus} style={{margin: '0px'}}\n        >\n          Добавить новый расход\n        </button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onAddExpense={onAddExpense}\n          onCancel={changeEditinStatus}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = ({onChangeFilter, filteredYear}) => {\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label htmlFor=\"yearFilter\">Фильтр по годам</label>\n        <select value={filteredYear} id=\"yearFilter\" onChange={onChangeFilter}>\n          <option value='2019'>2019</option>\n          <option value='2020'>2020</option>\n          <option value='2021'>2021</option>\n          <option value='2022'>2022</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = ({date}) => {\n  const firstLetterToUpper = (str) => {\n    return str[0].toUpperCase() + str.slice(1)\n  }\n  let month = firstLetterToUpper(date.toLocaleString('ru-RU', { month: 'long' }));\n  const day = date.toLocaleString('ru-RU', { day: '2-digit' });\n  const year = date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = ({date, title, amount}) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={date} />\n        <div className='expense-item__description'>\n          <h2>{title}</h2>\n          <div className='expense-item__price'>{amount} ₽</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = ({items, filterValue}) => {\n  if (!items.length) {\n    return <h2 className='expenses-list__fallback'>Трат не найдено.</h2>;\n  }\n  return (\n    <ul className='expenses-list'>\n      {items.map((expense) => (\n        <ExpenseItem \n          key={expense.id}\n          date={expense.date}\n          title={expense.title}\n          amount={expense.amount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = ({maxValue, value, label}) => {\n  let barFillHeight = '0%';\n  if (maxValue > 0) {\n    barFillHeight = Math.round((value / maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = ({dataPoints}) => {\n  const dataPointValues = dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = dataPointValues.reduce((sum, current) => sum + current, 0)\n\n  return (\n    <div className='chart'>\n      {dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = ({expenses}) => {\n  const chartDataPoints = [\n    { label: 'Янв.', value: 0 },\n    { label: 'Фев.', value: 0 },\n    { label: 'Март', value: 0 },\n    { label: 'Апр.', value: 0 },\n    { label: 'Май', value: 0 },\n    { label: 'Июн.', value: 0 },\n    { label: 'Июл.', value: 0 },\n    { label: 'Авг.', value: 0 },\n    { label: 'Сент.', value: 0 },\n    { label: 'Окт.', value: 0 },\n    { label: 'Нояб.', value: 0 },\n    { label: 'Дек.', value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport \"./Expenses.css\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = ({ items }) => {\n  const [filteredYear, setFilteredYear] = useState(\"2019\");\n\n  const onChangeFilterHandler = (event) => {\n    setFilteredYear(event.target.value);\n  };\n  const filteredItems = items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter filteredYear={filteredYear} onChangeFilter={onChangeFilterHandler} />\n      <ExpensesChart expenses={filteredItems}/>\n      <ExpensesList items={filteredItems} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Микроволновка\",\n    amount: 5663.12,\n    date: new Date(2019, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"Новый телевизор\",\n    amount: 14032.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Машинка для бритвы\",\n    amount: 5442.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"Новый стол\",\n    amount: 8032,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prev) => [expense, ...prev]);\n  }\n\n  return (\n    <>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}